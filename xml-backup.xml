<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/6.2" created="2023-05-02 19:54" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>chrispmann.com</title>
	<link>https://chrispmann.com</link>
	<description>Chris Mann&#039;s personal site</description>
	<pubDate>Tue, 02 May 2023 19:54:32 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://chrispmann.com</wp:base_site_url>
	<wp:base_blog_url>https://chrispmann.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[chrispmann@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[Chris]]></wp:author_display_name><wp:author_first_name><![CDATA[Chris]]></wp:author_first_name><wp:author_last_name><![CDATA[Mann]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[software-engineering]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Software Engineering]]></wp:cat_name>
<wp:category_description><![CDATA[Software engineering blogs]]></wp:category_description>
	</wp:category>
		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
	</wp:category>
			<wp:tag>
		<wp:term_id>8</wp:term_id>
		<wp:tag_slug><![CDATA[ai]]></wp:tag_slug>
		<wp:tag_name><![CDATA[AI]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>9</wp:term_id>
		<wp:tag_slug><![CDATA[gpt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[GPT]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>10</wp:term_id>
		<wp:tag_slug><![CDATA[llm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[LLM]]></wp:tag_name>
	</wp:tag>
			
	<generator>https://wordpress.org/?v=6.2</generator>
<site xmlns="com-wordpress:feed-additions:1">214551829</site>
		<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://chrispmann.com/2022/05/19/wp-global-styles-twentytwentytwo/</link>
		<pubDate>Thu, 19 May 2022 17:03:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/05/19/wp-global-styles-twentytwentytwo/</guid>
		<description></description>
		<content:encoded><![CDATA[{"styles":{"color":{"background":"var:preset|color|foreground","text":"var:preset|color|background"},"elements":{"link":{"color":{"text":"var:preset|color|background"}}}},"isGlobalStylesUserThemeJSON":true,"version":2}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 17:03:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 17:03:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-19 17:13:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-19 17:13:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-twentytwentytwo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="twentytwentytwo"><![CDATA[twentytwentytwo]]></category>
						</item>
					<item>
		<title><![CDATA[headshot]]></title>
		<link>https://chrispmann.com/headshot/</link>
		<pubDate>Thu, 19 May 2022 18:32:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/05/headshot.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 18:32:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 18:32:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 18:32:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 18:32:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[headshot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/headshot.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/05/headshot.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2041;s:6:"height";i:2170;s:4:"file";s:20:"2022/05/headshot.jpg";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:20:"headshot-282x300.jpg";s:5:"width";i:282;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"headshot-963x1024.jpg";s:5:"width";i:963;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:20:"headshot-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"headshot-768x817.jpg";s:5:"width";i:768;s:6:"height";i:817;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:22:"headshot-1445x1536.jpg";s:5:"width";i:1445;s:6:"height";i:1536;s:9:"mime-type";s:10:"image/jpeg";}s:9:"2048x2048";a:4:{s:4:"file";s:22:"headshot-1926x2048.jpg";s:5:"width";i:1926;s:6:"height";i:2048;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[headshot-small]]></title>
		<link>https://chrispmann.com/headshot-small/</link>
		<pubDate>Thu, 19 May 2022 18:34:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/05/headshot-small.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 18:34:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 18:34:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 18:34:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 18:34:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[headshot-small]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/headshot-small.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/05/headshot-small.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:496;s:6:"height";i:527;s:4:"file";s:26:"2022/05/headshot-small.jpg";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:26:"headshot-small-282x300.jpg";s:5:"width";i:282;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:26:"headshot-small-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Chris P Mann Headshot]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[cropped-headshot-small.jpg]]></title>
		<link>https://chrispmann.com/cropped-headshot-small-jpg/</link>
		<pubDate>Thu, 19 May 2022 21:00:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/05/cropped-headshot-small.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/cropped-headshot-small.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 21:00:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 21:00:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 21:00:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 21:00:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-headshot-small-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/cropped-headshot-small.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/05/cropped-headshot-small.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:34:"2022/05/cropped-headshot-small.jpg";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:34:"cropped-headshot-small-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:34:"cropped-headshot-small-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-270";a:4:{s:4:"file";s:34:"cropped-headshot-small-270x270.jpg";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-192";a:4:{s:4:"file";s:34:"cropped-headshot-small-192x192.jpg";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-180";a:4:{s:4:"file";s:34:"cropped-headshot-small-180x180.jpg";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"site_icon-32";a:4:{s:4:"file";s:32:"cropped-headshot-small-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7a1b9784649c67d1514a0ebeb2b7bb0e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ChrisMannCV]]></title>
		<link>https://chrispmann.com/chrismanncv/</link>
		<pubDate>Thu, 19 May 2022 21:05:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/05/ChrisMannCV.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 21:05:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 21:05:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 21:05:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 21:05:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[chrismanncv]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/ChrisMannCV.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/05/ChrisMannCV.pdf]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:5:"sizes";a:4:{s:4:"full";a:4:{s:4:"file";s:19:"ChrisMannCV-pdf.jpg";s:5:"width";i:1088;s:6:"height";i:1408;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"ChrisMannCV-pdf-232x300.jpg";s:5:"width";i:232;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:28:"ChrisMannCV-pdf-791x1024.jpg";s:5:"width";i:791;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:27:"ChrisMannCV-pdf-116x150.jpg";s:5:"width";i:116;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ChrisMannCV-ID]]></title>
		<link>https://chrispmann.com/chrismanncv-id/</link>
		<pubDate>Mon, 23 May 2022 21:05:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/05/ChrisMannCV-ID.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date><![CDATA[2022-05-23 21:05:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-23 21:05:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-23 21:05:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-23 21:05:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[chrismanncv-id]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/05/ChrisMannCV-ID.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/05/ChrisMannCV-ID.pdf]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:5:"sizes";a:4:{s:4:"full";a:4:{s:4:"file";s:22:"ChrisMannCV-ID-pdf.jpg";s:5:"width";i:1088;s:6:"height";i:1408;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"ChrisMannCV-ID-pdf-232x300.jpg";s:5:"width";i:232;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"ChrisMannCV-ID-pdf-791x1024.jpg";s:5:"width";i:791;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:30:"ChrisMannCV-ID-pdf-116x150.jpg";s:5:"width";i:116;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[General thoughts after three weeks]]></title>
		<link>https://chrispmann.com/2022/09/19/software-engineering-blog-part-1/</link>
		<pubDate>Mon, 19 Sep 2022 16:57:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading {"level":3} -->
<h3>Drinking from the fire hose</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The last time I studied programming was over twenty years ago. I tried to regulate my expectations about what had changed or not, and what I would remember or not from back then. After the first three weeks, I can say that I remembered more than I thought, and also modern programming is more different than I thought, so I suppose it balances out. Javascript has become the most used programming language in the human world, thanks to the explosion of web applications that drive most people's digital lives. Web browsers and other platforms for internet applications rarely directly interact with source HTML anymore, but rather a Domain Object Model generated by programming logic. It was all just below the surface of my everyday computer interactions, just waiting for me to discover it. Now that I have seen it, I can't look at my favorite websites and apps the same way again.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Javascript </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I had studied Java 20 years ago, and BASIC briefly before that. Being in a computer science program, our first goals were academic and conceptual. Our first assignments looked more familiar to me than I expected.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>function scuberGreetingForFeet(feet){
  if (feet &lt;= 400) {
    return 'This one is on me!'
  }
  else if (feet &lt;= 2000) {
    return 'That will be twenty bucks.'
  }
  else if (feet &lt;= 2500){
    return 'I will gladly take your thirty bucks.'
  }
  else if (feet &gt;= 2501){
    return 'No can do.'
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Then I began to discover just how far things had come from what I had learned in terms of streamlining writing the basic, common functions that almost any program needs.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>function switchOnCharmFromTip(tip){
  switch (tip){
    case "generous": return 'Thank you so much.';
    case 'not as generous': return 'Thank you.';
    default : return 'Bye.';
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>Document Object Model</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Document Object Model was completely new to me. I had learned HTML in high school; static web pages were the norm then. Submittable forms and GIF animated graphics were about as fancy as things got. Now you can grab, manipulate and create the display and interface elements on the website programatically, using any arbitrary data you want. It was a revelation.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>leftNationality.textContent = `${leftForm.name.value} may be from one of the following countries:`
        leftNationalityList.innerHTML = ''
        data.country.forEach(country =&gt; {
            const listItem = document.createElement('li')
            listItem.textContent = regionNames.of(country.country_id)
            leftNationalityList.append(listItem)
            
        })</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date><![CDATA[2022-09-19 16:57:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-19 16:57:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 17:29:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 17:29:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[software-engineering-blog-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Software engineering]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[A blog post about full stack software engineering including Javascript, DOM manipulation and JSON interaction]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[pudbiascan.strikingly.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 14:08:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 14:08:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis pills https://pudbiascan.strikingly.com/</strong>

Regards. A good amount of material!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[hafbeltminla.zombeek.cz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 16:31:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 16:31:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis prices https://hafbeltminla.zombeek.cz/</strong>

Really a good deal of wonderful information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Fetch, the .json method and Promises]]></title>
		<link>https://chrispmann.com/2022/09/22/fetch-the-json-method-and-promises/</link>
		<pubDate>Thu, 22 Sep 2022 01:29:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Introduction</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>After three weeks of learning Javascript I had a good handle on most basic local operations, and was feeling increasingly confident about simple asynchronous operations. This one, which retrieves book data from a source and creates objects for each book, is an ordinary example:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>fetch('http://localhost:3000/books')
    .then(res =&gt; res.json())
    .then(bookData =&gt; {
        bookData.forEach(createListElement)
})</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Fetch statements interact with outside data sources, though in this example it is referencing a server set up on the local machine. That part was easy for me to grasp. .then statements handle asychronous data, which was also easy to grasp given that the data is (usually) coming from a computer far away, and there are many unknowns about when or if the data will be recieved. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>.then statements return a <em>Promise</em>, which will resolve to some kind of information from the server once the communication is complete.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>My first understanding of .json was that it is the process by which JSON data, which has slightly different syntax, is converted into a Javascript object. Therefore, it is easy to understand how the .then statement waits for the data to be recieved and then feeds it into the .json method. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>So far, so good. But, you can see <em>two</em> .then statements. One is waiting for the response from the outside data source, but then one appears to be waiting for the result of the .json method. If  .json is doing a relatively simple operation of changing a few items of syntax, why then does it need to be behind a .then statement, which represents waiting on an asynchronous source? </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As my Google-fu for programming improved, I learned that I was wrong about what .json does. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Different Promises</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The fetch() method returns a Promise, which resolves into a Response. In this example, using the free API ageify.io, which takes in a name and puts out the most likely age of a person with that name:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>fetch('https://api.agify.io?name=Horatio')
    .then (res =&gt; console.log(res))</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>the console log of the return looks like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Response {type: 'cors', url: 'https://api.agify.io/?name=Horatio', redirected: false, status: 200, ok: true, …}
body: ReadableStream
bodyUsed: false
headers: Headers {}
ok :true
redirected: false
status: 200
statusText: "OK"
type: "cors"
url: "https://api.agify.io/?name=Horatio"
&#91;&#91;Prototype]]: Response</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>which is full of information about the server response, but the key point is that the body is listed as ReadableStream, which is an object type used for gradually collecting data from a remote source, the details of which are beyond the scope of this article. Even though the local machine has already waited for the server's Promise to be fulfilled, all it has recieved is the information <em>about</em> the data I want, not the data itself. There is not yet anything to be converted. Then, we come to the second .then:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>fetch('https://api.agify.io?name=Horatio')
    .then (res =&gt; res.json())
    .then (data =&gt; console.log(data))</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The second .then read the Promise generated by the first, and continued to wait for the data to arrive before giving it the name "data" and putting it in the console log:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>{age: 64, count: 175, name: 'Horatio'}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Finally, the data! Now I can know that the statistically average Horatio across their international data is 64 years old.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Through a better understanding of Promises I have come to understand better why it takes two of them to retrieve data from a remote source. I hope this artucle can give someone out there who was as confused as I was a breakthrough moment. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>References</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch">https://developer.mozilla.org/en-US/docs/Web/API/fetch</a></li><li><a href="https://agify.io/">https://agify.io/</a></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date><![CDATA[2022-09-22 01:29:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-22 01:29:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 18:40:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 18:40:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fetch-the-json-method-and-promises]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[.json]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[A challenge in fetching from json: what the .json method returns and why]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[pudbiascan.strikingly.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-01 20:56:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-01 20:56:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis 5mg https://pudbiascan.strikingly.com/</strong>

You said it nicely.!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[canadian discount pharmacies]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 11:44:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 11:44:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>prescription drugs without prior prescription https://hafbeltminla.zombeek.cz/</strong>

Incredible a lot of superb data!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://chrispmann.com/2022/09/22/wp-global-styles-blank-canvas/</link>
		<pubDate>Thu, 22 Sep 2022 00:59:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/09/22/wp-global-styles-blank-canvas/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date><![CDATA[2022-09-22 00:59:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-22 00:59:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 00:59:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 00:59:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-blank-canvas]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="blank-canvas"><![CDATA[blank-canvas]]></category>
						</item>
					<item>
		<title><![CDATA[cpm logo]]></title>
		<link>https://chrispmann.com/cpm-logo/</link>
		<pubDate>Thu, 22 Sep 2022 02:23:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/09/cpm-logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date><![CDATA[2022-09-22 02:23:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-22 02:23:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 02:23:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 02:23:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cpm-logo]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/09/cpm-logo.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/cpm-logo.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:520;s:6:"height";i:432;s:4:"file";s:20:"2022/09/cpm-logo.png";s:8:"filesize";i:9292;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"cpm-logo-300x249.png";s:5:"width";i:300;s:6:"height";i:249;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7730;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"cpm-logo-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4629;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[cropped-cpm-logo.png]]></title>
		<link>https://chrispmann.com/cropped-cpm-logo-png/</link>
		<pubDate>Thu, 22 Sep 2022 02:24:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/09/cropped-cpm-logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[http://chrispmann.com/wp-content/uploads/2022/09/cropped-cpm-logo.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date><![CDATA[2022-09-22 02:24:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-22 02:24:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 02:24:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 02:24:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-cpm-logo-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/09/cropped-cpm-logo.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/cropped-cpm-logo.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:520;s:6:"height";i:432;s:4:"file";s:28:"2022/09/cropped-cpm-logo.png";s:8:"filesize";i:4890;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:28:"cropped-cpm-logo-300x249.png";s:5:"width";i:300;s:6:"height";i:249;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7730;}s:9:"thumbnail";a:5:{s:4:"file";s:28:"cropped-cpm-logo-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4629;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Validated User Movie Reviewing in JS React]]></title>
		<link>https://chrispmann.com/2022/10/10/validated-user-movie-reviewing-in-js-react/</link>
		<pubDate>Mon, 10 Oct 2022 21:51:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Introduction</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In making any kind of site where users post and see reviews of products such as movies, a fundamental problem arises: If the user is free to enter any information into the form they like, they may enter different titles that correpond to the same movie, either by a mistype or a different understanding of the title itself. If that information gets entered in a .json file as is, it may end up looking like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>{
  "movies": &#91;
    {
      "id": 45,
      "title": "Princess Mononoke",
      "reviews": &#91;
        {
          "name": "Jay",
          "review": "call it what it is. treeson",
          "stars": 4
        },
      ]  
    },
    {
      "id": 46,
      "title": "Mononoke Hime",
      "reviews": &#91;
          {
          "name": "D. Bolt",
          "review": "why everyone tryna kill the deer god he just                           chillin",
          "stars": 3
        }
      ]
    },
    {
      "id": 47,
      "title": "もののけ姫",
      "reviews": &#91;
          {
          "name": "D. Bolt",
          "review": "I love Ghibli movies so much I learned Japanese to watch them!",
          "stars": 3
        }
      ]
}      </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Princess Mononoke, Mononoke Hime and もののけ姫 are the same movie, only the English title, the Romanized Japanese title and the Japanese title, respectively. Depending on the user's understanding of the Japanese and English language, they may never even consider the other one as a search possibility, and thus would never see one or the other of the reviews when searching for it. The solution I came up with is to have the user search for the movie titles and have the search function poll a free API, The Movie Database API at <a href="https://www.themoviedb.org/">https://www.themoviedb.org/</a> and return candidate movie titles. Then, the user can simply click on one and the movie title part of the data entry is already complete.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Getting and Using the API Authorization Key </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>First, we visited <a href="https://developers.themoviedb.org/4/getting-started/authorization">https://developers.themoviedb.org/4/getting-started/authorization</a> and made an account, which gave us access to a validation key. This key is part of the fetch request to get movie data from the database. I then created the fetch request like this: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>fetch(`https://api.themoviedb.org/3/search/movie?api_key=&lt;&lt;api key&gt;&gt;&amp;query=${event.target.value}`)
            .then(resource =&gt; resource.json())
            .then(movieSuggestions =&gt; (setSearchList(movieSuggestions)))
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The API key is omitted here (replaced with&lt;&lt;api key&gt;&gt;) but you can see how it is inserted just before query= and then the value of the search field. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Constructing the Rest of the Search Handler</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We built the search handler around the fetch request like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// function to handle search and create suggestions for movie titles
function handleSearch(event){
        event.preventDefault()
        setSearchTerm(event.target.value)
        if(event.target.value==='') {
            setSearchList(&#91;])
            }
        
        fetch(`https://api.themoviedb.org/3/search/movie?api_key=&lt;&lt;api key&gt;&gt;&amp;query=${event.target.value}`)
            .then(resource =&gt; resource.json())
            .then(movieSuggestions =&gt; (setSearchList(movieSuggestions)))
 }</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>Turning Search Results into Routing in React</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The API returns only the first 20 movie title candidates at the time, and that ended up being more than enough for our purposes. Then we set to work turning the results into links that would lead to the page which showed all the reviews for an individual movie. Some of the code for generating the React elements looks like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>function SearchListItem({movieSuggestion, setCurrMovie}){

    function handleClick(){
        setCurrMovie(movieSuggestion)
    }

    return (
        &lt;NavLink
        to={`/review/${movieSuggestion.id}`}
        exact
        &gt;
    &lt;li className="listitem"onClick={handleClick}&gt;{movieSuggestion.title}&lt;/li&gt;
    &lt;/NavLink&gt;
    )
    
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The NavLink is based off of the unique id tag of the movie from the database, which ensures that the user can't open the edit page with for a duplicate movie item. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I hope that others looking for ways to eliminate duplicate entries in user review/comment systems consider this method in their projects. I would like to thank Justin Saborouh for his contributions to the code and sample movie reviews.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date><![CDATA[2022-10-10 21:51:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-10 21:51:14]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-10 21:51:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-10 21:51:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[validated-user-movie-reviewing-in-js-react]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Data validation]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Movie title validation for user movie review sites using an external API]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[online pharmacies canada]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-10 13:57:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-10 13:57:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>canada rx https://pudbiascan.strikingly.com/</strong>

Many thanks. I appreciate it.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[canadian prescription drugstore]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 18:04:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 18:04:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>canadian prescriptions online https://hafbeltminla.zombeek.cz/</strong>

Regards, A good amount of stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Using Faker to Generate Dummy Data in Ruby ActiveRecord]]></title>
		<link>https://chrispmann.com/2022/10/25/using-faker-to-generate-dummy-data-in-ruby-activerecord/</link>
		<pubDate>Tue, 25 Oct 2022 22:06:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Introduction</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you are building and testing database schemas that will ultimately be used to house user data, you will need seed data to start. It should be diverse, have significant graulation but also resemble the data you expect the production database to contain. You could, of course, go into your seeds.db file and write something like this: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code># Add a console message so we can see output when the seed file runs
puts "Seeding games..."

Dessert.create(
name: Cake,
topping: cherries,
flavor: chocolate
)

Dessert.create(
name: Cookie,
topping: chocolate chips,
flavor: sugar
)

Dessert.create(
name: Donut,
topping: sprinkles,
flavor: jelly
)

puts "Done seeding!"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>That took me about ten minutes to write, and after only three items I was already running out of ideas. Testing database queries on this would be prone to mistakes (with only three entries, you may think you have identified the dessert your query expected to return but be wrong), and also boring to work with. I want to use my ten minutes much more effectively. That's where <a href="https://github.com/faker-ruby/faker">Faker</a> comes in. It is a Ruby gem which can generate many kinds of randomized data, and by creating different combinations you can ensure diversity in your test database. And because it's broken up into many different categories, you can make your test data look reasonably like real data, except funnier, which will hopefully brighten up your day.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Installing the gem and browsing the selection</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To install it, make sure Ruby itself is installed, and then type</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>gem install faker</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>and you're ready to go. You can browse the list of the categories of fake data at the <a href="https://github.com/faker-ruby/faker">GitHub page</a>. There's lots of very ordinary ones like <a href="https://github.com/faker-ruby/faker/blob/main/doc/default/name.md">names (including first and last names and many other options</a>), specialized ones like <a href="https://github.com/faker-ruby/faker/blob/main/doc/blockchain/ethereum.md">Etherium blockchain addresses</a> and then silly and nerdy ones like <a href="https://github.com/faker-ruby/faker/blob/main/doc/games/touhou.md">Touhou names and spell cards</a>. There's even just the one we need for our test database, <a href="https://github.com/faker-ruby/faker/blob/main/doc/default/dessert.md">desserts</a>!</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":102,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="https://chrispmann.com/wp-content/uploads/2022/10/faker-dessert-screenshot.png" alt="" class="wp-image-102"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Generating random entries in your seeds.db File</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now you have everything you need to create a near unlimited number of unique database entries. Back in your seeds.rb file, start making a loop to execute the Faker gem the number of times you want. Remember that numbers themselves are instances of classes in Ruby, so they inherit methods from their class parent, such as .times for integers.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>puts "Seeding desserts..."


50.times do
end

puts "Done seeding!"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This will execute whatever you put in between the "do" and the "end" 50 times. Next, you need to create the skeleton of a single table row:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>puts "Seeding desserts..."


50.times do
  Dessert.create(
    name: 
    topping:
    flavor: 
  )
end

puts "Done seeding!"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now it's time to put in the Faker information. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>puts "Seeding desserts..."


50.times do
  Dessert.create(
    name: Faker::Dessert.variety,
    topping: Faker::Dessert.topping,
    flavor: Faker::Dessert.flavor
  )
end

puts "Done seeding!"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>One important note: if you need any of the data to be unique, such as usernames, you will need to use the .unique method as part of the call.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>puts "Seeding desserts..."


50.times do
  Dessert.create(
    name: Faker::Dessert.unique.variety,
    topping: Faker::Dessert.topping,
    flavor: Faker::Dessert.flavor
  )
end

puts "Done seeding!"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The downside is that it will generate an error if there are not enough unique items in Faker for all the entries you are trying to create. For this demonstration, I won't be using it. The combination of these three items will create more than enough different desserts.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Results</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Let's look at all the delicious desserts Faker created.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":103,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="https://chrispmann.com/wp-content/uploads/2022/10/faker-database-screenshot.png" alt="" class="wp-image-103"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Would you like some espresso peanut cobbler, or perhaps a mint chocolate chip cheesecake with toffee bits? </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I hope this method helps other database developers create test data quickly and easily, and also gives some much-needed enjoyment to staring at a screen covered with mysterious programming runes for hours.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date><![CDATA[2022-10-25 22:06:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-25 22:06:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-08 19:55:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-08 19:55:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-faker-to-generate-dummy-data-in-ruby-activerecord]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[pudbiascan.strikingly.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-02 11:48:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-02 11:48:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis 5mg https://pudbiascan.strikingly.com/</strong>

With thanks. Ample tips!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[https://hafbeltminla.zombeek.cz/]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 16:50:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 16:50:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap cialis https://hafbeltminla.zombeek.cz/</strong>

Beneficial advice. With thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[faker-dessert-screenshot]]></title>
		<link>https://chrispmann.com/2022/10/25/using-faker-to-generate-dummy-data-in-ruby-activerecord/faker-dessert-screenshot/</link>
		<pubDate>Tue, 25 Oct 2022 20:38:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/10/faker-dessert-screenshot.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date><![CDATA[2022-10-25 20:38:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-25 20:38:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-25 20:38:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-25 20:38:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[faker-dessert-screenshot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>101</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/10/faker-dessert-screenshot.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/10/faker-dessert-screenshot.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:864;s:6:"height";i:429;s:4:"file";s:36:"2022/10/faker-dessert-screenshot.png";s:8:"filesize";i:26657;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:36:"faker-dessert-screenshot-300x149.png";s:5:"width";i:300;s:6:"height";i:149;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12375;}s:9:"thumbnail";a:5:{s:4:"file";s:36:"faker-dessert-screenshot-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:3647;}s:12:"medium_large";a:5:{s:4:"file";s:36:"faker-dessert-screenshot-768x381.png";s:5:"width";i:768;s:6:"height";i:381;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:45161;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[faker-database-screenshot]]></title>
		<link>https://chrispmann.com/2022/10/25/using-faker-to-generate-dummy-data-in-ruby-activerecord/faker-database-screenshot/</link>
		<pubDate>Tue, 25 Oct 2022 21:58:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/10/faker-database-screenshot.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date><![CDATA[2022-10-25 21:58:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-25 21:58:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-25 21:58:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-25 21:58:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[faker-database-screenshot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>101</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/10/faker-database-screenshot.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/10/faker-database-screenshot.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:768;s:6:"height";i:585;s:4:"file";s:37:"2022/10/faker-database-screenshot.png";s:8:"filesize";i:45358;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:37:"faker-database-screenshot-300x229.png";s:5:"width";i:300;s:6:"height";i:229;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27087;}s:9:"thumbnail";a:5:{s:4:"file";s:37:"faker-database-screenshot-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6278;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Data Validations in Ruby on Rails]]></title>
		<link>https://chrispmann.com/?p=107</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>If you have been working with Ruby on Rails for any length of time, you have probably practiced some basic validations on data before it enters the database, such as:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Person &lt; ApplicationRecord
  validates :name, presence: true
end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>which ensures that the instances of the Person class, and therefore entries in the Person database table, all have a name. Other common validations involve length, such as Twitter's famous 280 character limit (though some non-Roman characters and emojis have more "weight", a subject for another blog entry maybe). Such a validation can be implemented like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Tweet &lt; ApplicationRecord
  validates :content, length: { maximum: 280 }
end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Another common validation is uniqueness. SQL tables already have a unique identifier generated when a new entry is created, so a lack of uniqueness should not create a structural problem for the database itself, but you may need to enforce it on something like email addresses or phone numbers:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Account &lt; ApplicationRecord
  validates :email, uniqueness: true
end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Or, you may need to validate for uniqueness of one column of the entry against another column, such as if you need to make sure you don't eat pizza more than once a week:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class FoodSchedule &lt; ApplicationRecord
  validates :name, uniqueness: { scope: :week }
end</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>Password Standards Verification</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Verification has a role to play in security, and one of them is ensuring good standards for passwords. Most passwords that users would initially think of are easy to guess (password1, 12345 etc) so even though it drives some users crazy, organizations should only accept stronger passwords. Note: this is independent of the process of encoding passwords in the database. Once they are rendered into hashes by Rails' built-in hashing system, they all become equal length and complexity. One common one is requiring passwords have certain special characters.  </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code></code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date><![CDATA[2022-11-16 20:03:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-16 20:03:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-16 20:03:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ActiveRecord Associations Review]]></title>
		<link>https://chrispmann.com/2022/11/21/activerecord-associations-review/</link>
		<pubDate>Mon, 21 Nov 2022 21:55:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Deciding how to associate database tables with each other can be an intense part of early project planning, especially when considering future growth. To help software engineeers focus on the important, big picture questions, ActiveRecord has many pre-built ways to associate database tables with each other. In this blog I will present a few database schemas that would be necessary for common kinds of web applications and which ActiveRecord association macros to use.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>A list of user-created objects</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Be they recipes, movie reviews, arts and crafts for sale, plans to take over the earth or anything else, users love creating things and putting them on the internet. This behavior can be represented by a one-to-many table association, where a user has many objects, but the objects each have only one user. We can accomplish this in Rails by first creating a User model with the following association macro:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class User &lt; ApplicationRecord
  has_many :world_conquest_plans

end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This simple declarative statement shows the app that we intend for one user to have many ways to take over the world. We can get away with not describing <em>how </em>the database will accomplish this because ActiveRecord is a <em>declarative</em> web application framework, not an <em>imperative</em> language like Javascript or most others. Likewise, on the ways to take over the world side, the code looks like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class WorldConquestPlan &lt; ApplicationRecord
  belongs_to :user

end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Every plan to conquer the world belongs to one user, but only to them. Notice especially how in the first code snippet, world_conquest_plan is plural but in the second, user is singular. This naming convention is enforced by ActiveRecord, and you need to follow it as well. Incidentally, ActiveRecord already knows the appropriate spelling patterns of English, like that "flies" is the plural of "fly". </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Events and schedules</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Many web apps need to create a relationships between users and some kind of service they offer, such as college courses, events, or appointments. Many of them, such as an advising schedule between students and professors at a university, involve many to many relationships that can be hard to keep track of. Things can be made simpler with  <em>join table</em> which has reference to one element of the other two tables. In terms of student/instructor advising scheduling, the student can be set up like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Student &lt; ApplicationRecord
  has_many :meetings
  has_many :instructors, through: :meetings

end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The instructor model is the opposite:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Instructor &lt; ApplicationRecord
  has_many :meetings
  has_many :students, through: :meetings

end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The fact that instructors will have far, far more students than students have instructors is not important here, only that they have a many to many relationship with each other.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The meeting model looks very different than the others:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Meeting &lt; ApplicationRecord
  belongs_to :student
  belongs_to :instructor
end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This indicates that the meeting involves only one student and one instructor at a time. Once this relationship is established, you can create queries that reveal important trends, such as which instructors get visited the most for help, or which students make the most use of instructor time.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What about has_and_belongs_to_many?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the situation above, the relationship between students and instructors (or almost any other many to many relationship), I did not use Rails' has_and_belongs_to_many association macro, which automatically creates a join table that allows relationships between each element of the other tables. I searched and searched for examples where it would be superior to making a join table of your own, but failed to find any. The problem is that conceptually, the join table it creates (which will be automatically given a name based on the two other tables being joined) doesn't represent anything. Imagine the example above, but created that way:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class Instructor &lt; ApplicationRecord
  has_and_belongs_to_many: students

end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>It would create a schema that looks like this: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  create_table "student_instructor", force: :cascade do |t|
    t.integer "student_id", null: false
    t.integer "instructor_id", null: false
    t.datetime "created_at", precision: 6, null: false
    t.datetime "updated_at", precision: 6, null: false
  end</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Just what is a "student_instructor"? Even if you know that it just refers to the connection between students and instructors, future software engineers who look at your work may not. If you decide to put extra data in this table, such as meeting times, it will only add to the confusion. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Rails makes it easy to just think about the highest level issues in table associations and queries. Besides choosing tables and associations that mean something to you and represent tangible things in the world, make sure to make choices that future people who look at your tables will be able to read and expand on. The world is a neverending deluge of new data and as a database engineer, your job is to bring order to it even in the face of future data the likes of which you can't imagine.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date><![CDATA[2022-11-21 21:55:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-11-21 21:55:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-22 21:58:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-22 21:58:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[activerecord-associations-review]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[rails activerecord]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[A review of basic Rails Activerecord association macros, and a few common applications of them.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[https://pudbiascan.strikingly.com/]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-11 10:59:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-11 10:59:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis canada https://pudbiascan.strikingly.com/</strong>

Excellent info. Cheers.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[hafbeltminla.zombeek.cz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 15:50:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 15:50:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cialis prices https://hafbeltminla.zombeek.cz/</strong>

Many thanks, Helpful information!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Geocoding in React JS using Geoapify]]></title>
		<link>https://chrispmann.com/2022/12/08/geocoding-in-react-js-using-geoapify/</link>
		<pubDate>Thu, 08 Dec 2022 19:54:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Introduction</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>My final project for the Flatiron Software Engineering course has been a <a href="https://dialect-map.onrender.com/">website that takes in user survey data about their English dialect and plots it on a map of where they live, where they were born, and where their parents are from</a>. It still has a lot of room for improvement and enhancement, but I am hoping it will generate some fun conversations among the people who use it. An essential function of the site was changing user-entered locations, which could be cities, countries, regions or anything else, into map markers. Creating such a system myself was far beyond the scope of this project, so I began researching APIs that could do this task for me. In the end, I decided on <a href="https://www.geoapify.com/">https://www.geoapify.com/</a>, which uses the user-created map data from <a href="https://www.openstreetmap.org/">https://www.openstreetmap.org/</a> (which I also used in my project) and others to send large, multifaceted data objects in response to location queries. In this post I will explain how I learned to do it and some pitfalls I encountered along the way. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What are map coordinates, anyway?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As a child of the not yet information age, I learned of map coordinates in terms of degrees and minutes north and south of the equator, or west or east of the prime meridian, written like 47°36′35″N 122°19′59″W. However, the sample input for one of <a href="https://react-leaflet.js.org/">React Leaflet's</a> map markers looked like this: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    &lt;Marker position='51.505, -0.09'&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Maybe it's just because I was tired at the time from a long day of coding, but at first I couldn't imagine the relationship between these two things at all. Also, I didn't know what to call this method of positioning in order to Google it, and everything I tried resulted in articles about positioning coordinates inside the browser window, which is also useful, but not what I was looking for. After an hour or two of searching I discovered (through Wikipedia, of course) that that is referred to as "decimal degrees", and the second coordinate is positive for the eastern hemisphere and negative for the western. So far, so good. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Geoapify Geocoding Fetch Request</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Geoapify offers a few different map related APIs. Two of them are geocoding, and  <em>reverse</em> geocoding. Geocoding refers to entering a place name and recieving coodinates, while reverse geocoding is entering coordinates and recieving place information. My project called for the former. I settled on the following fetch request:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  // converts place names into map coordinates
    function geocoder(placeName){
        fetch(`https://api.geoapify.com/v1/geocode/search?text=${placeName}&amp;apiKey=${process.env.REACT_APP_GEOCODE_API_KEY}`)
        .then(response =&gt; response.json())
        .then(result =&gt; {
        if (result.features.length &gt; 0){
            setProperties((properties) =&gt; &#91;...properties, {...result.features&#91;0].properties, placeName}])
        }
        })
    }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>An earlier version mistakenly had the API key written in directly, and I got to discover the exciting world of Git history reconstuction! But that's a story for another day. Once I recieved the data object, I chose just a small part of it (result.features[0].properties) to use in my site. In the next section I'll show why. Also, I realized that I needed the "properties" state to include placeName, which is the exact string the user entered, in order to properly reference the users with the places they recorded. More on that later.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The geocode data object</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I had worked with external APIs before, including for a movie database, so I was expecting to recieve more information from the API than I really needed. I was not prepared for just how big and confusing the object I recieved was. Here is just a sample:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":116,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="https://chrispmann.com/wp-content/uploads/2022/12/geocode-object-clip.png" alt="" class="wp-image-116"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>First, the object was an array of five "features", which represent its top five guesses about what the place name referred to (Georgia the US state, Georgia the country in Europe, etc). I don't know its internal logic for choosing one over the other, but for simplicity, I chose just the first one. At first though, I assumed that the geometry.coordinates section was the coordinates associated with the place, but using that resulted in wildly inaccurate output, like the city of Madrid being near the North Pole. I settled on properties.lat and properties.lon, which upon testing seemed to represent the geographic center of whatever location I put in.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Rendering the markers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Armed with these coordinates, I built a function to render the react-leaflet map markers:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    // renders markers and their popups on the map
    function renderMarkers(){

        return properties.map(property  =&gt;{
            // console.log(property)
            return (&lt;Marker key = {property.place_id} 
                    position={&#91;property.lat, property.lon]}
                    alt={property.formatted}
                    title={property.formatted}


                    &gt;
                        &lt;Popup id= {property.formatted} &gt;
                        {property.formatted}&lt;br/&gt;

                        &lt;Link to={`/survey_responses/${property.placeName}`} property={property}&gt;Survey Responses for this place&lt;/Link&gt;
                        &lt;/Popup&gt;
                    &lt;/Marker&gt;)
            })
    }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Property.formatted, which I used for the marker names and alt data, represents the place name as formatted by the API. For countries it typically is just a string of the country name, but for regions or cities it appends the higher order information, for example a user input of "Denver" results in property.formatted of "Denver, CO, United States of America". This is important to remember because for other parts of my website I needed to match these markers with the users that created them, and property.formatted often did not match what was in the user database table. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In some ways, using geocoding was easier than I expected. Geoapify's somehow handled even confusing or ambiguous queries (Muskogee, China still somehow resulted in a location inside China) rather than returning nothing, and I was able to link all the map markers back successfully to the users who created them. In future projects I hope to make better use of the bounty of information in the geocoding object and add more dynamic programming to the map. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As usual, I hope that this post helps someone else who is struggling with the wild world of web development. </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date><![CDATA[2022-12-08 19:54:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-08 19:54:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-08 19:54:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-08 19:54:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[geocoding-in-react-js-using-geoapify]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[pudbiascan.strikingly.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://pudbiascan.strikingly.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-02 07:25:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-02 07:25:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>tadalafil without a doctor's prescription https://pudbiascan.strikingly.com/</strong>

Wow all kinds of useful advice!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[hafbeltminla.zombeek.cz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://hafbeltminla.zombeek.cz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.139.53.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-15 12:54:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-15 12:54:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>purchasing cialis on the internet https://hafbeltminla.zombeek.cz/</strong>

You mentioned it effectively!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[geocode-object-clip]]></title>
		<link>https://chrispmann.com/2022/12/08/geocoding-in-react-js-using-geoapify/geocode-object-clip/</link>
		<pubDate>Thu, 08 Dec 2022 17:56:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://chrispmann.com/wp-content/uploads/2022/12/geocode-object-clip.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date><![CDATA[2022-12-08 17:56:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-08 17:56:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-08 17:56:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-08 17:56:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[geocode-object-clip]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>113</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://chrispmann.com/wp-content/uploads/2022/12/geocode-object-clip.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/geocode-object-clip.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:729;s:6:"height";i:840;s:4:"file";s:31:"2022/12/geocode-object-clip.png";s:8:"filesize";i:78305;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:31:"geocode-object-clip-260x300.png";s:5:"width";i:260;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:39835;}s:9:"thumbnail";a:5:{s:4:"file";s:31:"geocode-object-clip-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13248;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Thoughts From My First Hackathon]]></title>
		<link>https://chrispmann.com/2023/03/27/thoughts-from-my-first-hackathon/</link>
		<pubDate>Mon, 27 Mar 2023 23:38:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Yesterday I attended my first all-day hackathon, <a href="https://www.meetup.com/startupfriends/events/292284155/">the Seattle AI Hackathon at SURF</a>. I knew that hackathons would be part of my future in software engineering, and was happy to see that in-person ones were starting back up, because looking at the Brady Bunch PC screen version of meetings for the last three years was really grating on me. It turns out that I had joined something possibly more monumentous than just any hackathon - one of the first dedicated to exploiting the new AI technology offered by Large Language models (LLM), especially the first to market, OpenAI's GPT models.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>It's about to be the late 90s all over again</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As a high school student in Seattle in the mid and late 90s, I witnessed the beginning of the modern World Wide Web, and the software business upheaval that went along with it. Suddenly there were two kinds of tech companies: modern ones that had a .com in their name and dinosaurs that did not. Over the coming years or possibly months, there will be software companies that integrate "AI" into their user experience (and probably their name), and dinosaurs. I saw and participated in the beginning of what forms the AI experience may take.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Not Just about chatting</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When it comes to the new world of AI, ChatGPT has dominated the public space. Software that can talk to you like a human has always been the most captivating application of language models, and most of the projects were indeed built around this, but not all of them.  I saw projects to use language models to search and refine human speech as well, to set priorities on incoming communications, break apart tasks into their components, and create smart transcripts, My team's project, which won second place, involved making product manuals more searchable. Modest, down-to-earth applications and wild, exuberant ones were side-by-side.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What is "AI" going to mean?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As a linguist, I need to remind myself that what is being called AI is really much more specific: software systems designed to predict the next word that a human will write. If one is going to ascribe general intelligence or even sentience to that, it sounds like a claim that intelligence is nothing but communication ability. But I know that society at large, and the media, probably aren't going to of think it that way. We're entering a wild time where the definition of intelligence will evolve in new and unexpected ways. What a time to be alive.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>More on the hackathon itself later.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date><![CDATA[2023-03-27 23:38:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2023-03-27 23:38:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-03-27 23:38:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-03-27 23:38:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[thoughts-from-my-first-hackathon]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="post_tag" nicename="gpt"><![CDATA[GPT]]></category>
		<category domain="post_tag" nicename="llm"><![CDATA[LLM]]></category>
		<category domain="category" nicename="software-engineering"><![CDATA[Software Engineering]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_pingme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Header (Dark, small)]]></title>
		<link>https://chrispmann.com/2022/05/19/header-small-dark/</link>
		<pubDate>Thu, 19 May 2022 18:34:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/05/19/header-small-dark/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:group {"align":"full","style":{"elements":{"link":{"color":{"text":"var:preset|color|background"}}},"spacing":{"padding":{"top":"0px","bottom":"0px"}}},"backgroundColor":"foreground","textColor":"background","layout":{"inherit":true}} -->
<div class="wp-block-group alignfull has-background-color has-foreground-background-color has-text-color has-background has-link-color" style="padding-top:0px;padding-bottom:0px"><!-- wp:template-part {"slug":"header","theme":"twentytwentytwo","tagName":"header","align":"wide"} /--></div>
<!-- /wp:group -->

<!-- wp:spacer {"height":"66px"} -->
<div style="height:66px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 18:34:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 18:34:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 18:34:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 18:34:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[header-small-dark]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_template_part]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_template_part_area" nicename="header"><![CDATA[header]]></category>
		<category domain="wp_theme" nicename="twentytwentytwo"><![CDATA[twentytwentytwo]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[origin]]></wp:meta_key>
		<wp:meta_value><![CDATA[theme]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Header]]></title>
		<link>https://chrispmann.com/2022/05/19/header/</link>
		<pubDate>Thu, 19 May 2022 18:34:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/05/19/header/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:group {"layout":{"inherit":true}} -->
<div class="wp-block-group"><!-- wp:group {"align":"wide","style":{"spacing":{"padding":{"bottom":"var(\u002d\u002dwp\u002d\u002dcustom\u002d\u002dspacing\u002d\u002dlarge, 8rem)","top":"var(\u002d\u002dwp\u002d\u002dcustom\u002d\u002dspacing\u002d\u002dsmall, 1.25rem)"}}},"layout":{"type":"flex","justifyContent":"space-between"}} -->
<div class="wp-block-group alignwide" style="padding-top:var(--wp--custom--spacing--small, 1.25rem);padding-bottom:var(--wp--custom--spacing--large, 8rem)"><!-- wp:group {"layout":{"type":"flex"}} -->
<div class="wp-block-group"><!-- wp:site-title {"style":{"typography":{"fontStyle":"italic","fontWeight":"400"}}} /--></div>
<!-- /wp:group -->

<!-- wp:image {"id":19,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://chrispmann.com/wp-content/uploads/2022/05/headshot-small.jpg" alt="Chris P Mann Headshot" class="wp-image-19"/></figure>
<!-- /wp:image --></div>
<!-- /wp:group --></div>
<!-- /wp:group -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 18:34:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 18:34:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 18:38:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 18:38:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[header]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_template_part]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_template_part_area" nicename="header"><![CDATA[header]]></category>
		<category domain="wp_theme" nicename="twentytwentytwo"><![CDATA[twentytwentytwo]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[origin]]></wp:meta_key>
		<wp:meta_value><![CDATA[theme]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Header navigation]]></title>
		<link>https://chrispmann.com/2022/05/19/header-navigation/</link>
		<pubDate>Thu, 19 May 2022 18:36:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/05/19/header-navigation/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2022-05-19 18:36:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-19 18:36:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-19 18:36:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-19 18:36:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[header-navigation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_navigation]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[Header navigation 2]]></title>
		<link>https://chrispmann.com/2022/05/25/header-navigation-2/</link>
		<pubDate>Wed, 25 May 2022 22:51:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/05/25/header-navigation-2/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date><![CDATA[2022-05-25 22:51:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-25 22:51:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-25 22:51:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-25 22:51:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[header-navigation-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_navigation]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://chrispmann.com/2022/09/22/wp-global-styles-twentytwenty/</link>
		<pubDate>Thu, 22 Sep 2022 17:28:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://chrispmann.com/2022/09/22/wp-global-styles-twentytwenty/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date><![CDATA[2022-09-22 17:28:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-22 17:28:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-22 17:28:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-22 17:28:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-twentytwenty]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="twentytwenty"><![CDATA[twentytwenty]]></category>
						</item>
				</channel>
</rss>
	